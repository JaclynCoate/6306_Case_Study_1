MeanAcc = colMeans(masterAcc)
plot(seq(1,numks,1),MeanAcc, type = "l")
aggr_plot <- aggr(brew.beer, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(brew.beer), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
library(class)
library(caret)
library(tidyverse)
library(VIM)
library(lattice)
library(mice)
breweries <- read.csv("https://raw.githubusercontent.com/BivinSadler/MDS-6306-Doing-Data-Science-Fall-2019/master/Unit%208%20and%209%20Case%20Study%201/Breweries.csv", header = TRUE, strip.white=TRUE)
#breweries
beers <- read.csv("https://raw.githubusercontent.com/BivinSadler/MDS-6306-Doing-Data-Science-Fall-2019/master/Unit%208%20and%209%20Case%20Study%201/Beers.csv", header = TRUE)
#beers
beers <-  beers %>% dplyr::rename( Brew_ID = Brewery_id)
#beers
breweries <- breweries %>% dplyr::rename(Name_Brew = Name)
#breweries
beers <- beers %>% dplyr::rename(Name_Beer = Name)
brew.beer <- full_join(breweries, beers, by = "Brew_ID")
#str(brew.beer)
#glimpse(brew.beer)
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(brew.beer,2,pMiss)
apply(brew.beer,1,pMiss)
aggr_plot <- aggr(brew.beer, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(brew.beer), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
marginplot(brew.beer[,c("ABV","IBU")])
md.pattern(brew.beer)
aggr_plot <- aggr(brew.beer, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(brew.beer), cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
#marginplot(brew.beer[,c("ABV","IBU")])
md.pattern(brew.beer)
aggr_plot <- aggr(brew.beer, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(brew.beer), cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
#marginplot(brew.beer[,c("ABV","IBU")])
md.pattern(brew.beer)
brew.beer.impute <- mice(brew.beer[,c("Beer_ID","ABV","IBU")],m=5,maxit=50,meth='pmm',seed=100)
#summary(brew.beer.impute)
brew.beer.impute$imp$ABV #check the imputed data ABV
brew.beer.impute$imp$IBU # check the imputed data IBU
brew.beer.draft <- complete(brew.beer.impute,1)  # Complete impute dataset
#view(brew.beer.draft)
brew.beer.draft <- brew.beer.draft %>% dplyr::rename(ABV.New = ABV)
brew.beer.draft <- brew.beer.draft %>% dplyr::rename(IBU.New = IBU)
brew.beer.New <- full_join(brew.beer, brew.beer.draft, by = "Beer_ID")
#view(brew.beer.New)
#styles <- unique(brew.beer.New$Style)
#view(styles)
Ales.beer <- cbind(brew.beer.New, type='Ales', stringsAsFactors=F) %>% filter(grepl('\\bale\\b', Style, ignore.case=T))
IPA.beer <- cbind(brew.beer.New, type='IPA', stringsAsFactors=F) %>% filter(grepl('\\bIPA\\b', Style, ignore.case=T))
IPA.Ales <- union(Ales.beer, IPA.beer)
IPA.Ales$type <- as.factor(IPA.Ales$type)
classifications = knn(train[,c('IBU.New','ABV.New')],test[,c('IBU.New','ABV.New')],train$type, prob = TRUE, k)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::include_graphics("/Users/Jaco/Desktop/SMU/DS_6306_Doing_Data_Science/Unit_8_9_CaseStudy1/presentations")
aggr_plot <- aggr(brew.beer, col=c('navyblue','red'),
numbers=TRUE, sortVars=TRUE,
labels=names(brew.beer),
cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
#marginplot(brew.beer[,c("ABV","IBU")])
aggr_plot <- invisible(aggr(brew.beer, col=c('navyblue','red'),
numbers=TRUE, sortVars=TRUE,
labels=names(brew.beer),
cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern")))
#marginplot(brew.beer[,c("ABV","IBU")])
aggr_plot <- invisible(aggr(brew.beer, col=c('navyblue','red'),
numbers=TRUE, sortVars=TRUE,
labels=names(brew.beer),
cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern")))
#marginplot(brew.beer[,c("ABV","IBU")])
md.pattern(brew.beer)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::include_graphics("/Users/Jaco/Desktop/SMU/DS_6306_Doing_Data_Science/Unit_8_9_CaseStudy1/presentations")
library(class)
library(caret)
library(tidyverse)
library(VIM)
library(lattice)
library(mice)
library(class)
library(caret)
library(tidyverse)
library(VIM)
library(lattice)
library(mice)
breweries <- read.csv("https://raw.githubusercontent.com/BivinSadler/MDS-6306-Doing-Data-Science-Fall-2019/master/Unit%208%20and%209%20Case%20Study%201/Breweries.csv", header = TRUE, strip.white=TRUE)
#breweries
beers <- read.csv("https://raw.githubusercontent.com/BivinSadler/MDS-6306-Doing-Data-Science-Fall-2019/master/Unit%208%20and%209%20Case%20Study%201/Beers.csv", header = TRUE)
#beers
beers <-  beers %>% dplyr::rename( Brew_ID = Brewery_id)
#beers
breweries <- breweries %>% dplyr::rename(Name_Brew = Name)
#breweries
beers <- beers %>% dplyr::rename(Name_Beer = Name)
brew.beer <- full_join(breweries, beers, by = "Brew_ID")
#str(brew.beer)
#glimpse(brew.beer)
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(brew.beer,2,pMiss)
apply(brew.beer,1,pMiss)
aggr_plot <- invisible(aggr(brew.beer, col=c('navyblue','red'),
numbers=TRUE, sortVars=TRUE,
labels=names(brew.beer),
cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern")))
#marginplot(brew.beer[,c("ABV","IBU")])
brew.beer, col=c('navyblue','red'),
aggr(brew.beer, col=c('navyblue','red'),
numbers=TRUE, sortVars=TRUE,
labels=names(brew.beer),
cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
aggr(brew.beer, col=c('navyblue','red'),
numbers=TRUE, sortVars=TRUE,
labels=names(brew.beer),
cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
#marginplot(brew.beer[,c("ABV","IBU")])
#aggr_plot <- aggr(brew.beer, col=c('navyblue','red'),
#                  numbers=TRUE, sortVars=TRUE,
#                  labels=names(brew.beer),
#                  cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
aggr(brew.beer, col=c('navyblue','red'),
numbers=TRUE, sortVars=TRUE,
labels=names(brew.beer),
cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
#marginplot(brew.beer[,c("ABV","IBU")])
#aggr_plot <- aggr(brew.beer, col=c('navyblue','red'),
#                  numbers=TRUE, sortVars=TRUE,
#                  labels=names(brew.beer),
#                  cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
brew.beer %>% aggr(col=c('navyblue','red'),
numbers=TRUE, sortVars=TRUE,
labels=names(brew.beer),
cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
#marginplot(brew.beer[,c("ABV","IBU")])
md.pattern(brew.beer)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::include_graphics("/Users/Jaco/Desktop/SMU/DS_6306_Doing_Data_Science/Unit_8_9_CaseStudy1/presentations")
breweries <- read.csv("https://raw.githubusercontent.com/BivinSadler/MDS-6306-Doing-Data-Science-Fall-2019/master/Unit%208%20and%209%20Case%20Study%201/Breweries.csv", header = TRUE, strip.white=TRUE)
#breweries
beers <- read.csv("https://raw.githubusercontent.com/BivinSadler/MDS-6306-Doing-Data-Science-Fall-2019/master/Unit%208%20and%209%20Case%20Study%201/Beers.csv", header = TRUE)
#beers
beers <-  beers %>% dplyr::rename( Brew_ID = Brewery_id)
library(class)
library(caret)
library(tidyverse)
library(VIM)
library(lattice)
library(mice)
breweries <- read.csv("https://raw.githubusercontent.com/BivinSadler/MDS-6306-Doing-Data-Science-Fall-2019/master/Unit%208%20and%209%20Case%20Study%201/Breweries.csv", header = TRUE, strip.white=TRUE)
#breweries
beers <- read.csv("https://raw.githubusercontent.com/BivinSadler/MDS-6306-Doing-Data-Science-Fall-2019/master/Unit%208%20and%209%20Case%20Study%201/Beers.csv", header = TRUE)
#beers
beers <-  beers %>% dplyr::rename( Brew_ID = Brewery_id)
#beers
breweries <- breweries %>% dplyr::rename(Name_Brew = Name)
#breweries
beers <- beers %>% dplyr::rename(Name_Beer = Name)
brew.beer <- full_join(breweries, beers, by = "Brew_ID")
#str(brew.beer)
#glimpse(brew.beer)
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(brew.beer,2,pMiss)
apply(brew.beer,1,pMiss)
#aggr_plot <- aggr(brew.beer, col=c('navyblue','red'),
#                  numbers=TRUE, sortVars=TRUE,
#                  labels=names(brew.beer),
#                  cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
brew.beer %>% aggr(col=c('navyblue','red'),
numbers=TRUE, sortVars=TRUE,
labels=names(brew.beer),
cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
#marginplot(brew.beer[,c("ABV","IBU")])
#marginplot(brew.beer[,c("ABV","IBU")])
marginplot(brew.beer[,c("ABV","IBU")])
?md.pattern
md.pattern(brew.beer,
main="Original Data")
md.pattern(brew.beer) %>%
main="Original Data"
md.pattern(brew.beer),
md.pattern(brew.beer,
main="Original Data")
#aggr_plot <- aggr(brew.beer, col=c('navyblue','red'),
#                  numbers=TRUE, sortVars=TRUE,
#                  labels=names(brew.beer),
#                  cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
brew.beer %>% aggr(col=c('navyblue','red'),
numbers=TRUE, sortVars=TRUE,
labels=names(brew.beer),
cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
#marginplot(brew.beer[,c("ABV","IBU")])
md.pattern(brew.beer)
brew.beer.impute <- mice(brew.beer[,c("Beer_ID","ABV","IBU")],m=5,maxit=50,meth='pmm',seed=100)
#summary(brew.beer.impute)
brew.beer.impute$imp$ABV #check the imputed data ABV
brew.beer.impute$imp$IBU # check the imputed data IBU
brew.beer.draft <- complete(brew.beer.impute,1)  # Complete impute dataset
#view(brew.beer.draft)
brew.beer.draft <- brew.beer.draft %>% dplyr::rename(ABV.New = ABV)
brew.beer.draft <- brew.beer.draft %>% dplyr::rename(IBU.New = IBU)
brew.beer.New <- full_join(brew.beer, brew.beer.draft, by = "Beer_ID")
#view(brew.beer.New)
#styles <- unique(brew.beer.New$Style)
#view(styles)
Ales.beer <- cbind(brew.beer.New, type='Ales', stringsAsFactors=F) %>% filter(grepl('\\bale\\b', Style, ignore.case=T))
IPA.beer <- cbind(brew.beer.New, type='IPA', stringsAsFactors=F) %>% filter(grepl('\\bIPA\\b', Style, ignore.case=T))
IPA.Ales <- union(Ales.beer, IPA.beer)
IPA.Ales$type <- as.factor(IPA.Ales$type)
set.seed(100)
splitPerc = .7
iterations = 500
numks =100
masterAcc = matrix(nrow = iterations, ncol = numks)
for(j in 1:iterations) {
accs = data.frame(accuracy = numeric(numks), k = numeric(numks))
trainIndices = sample(1:dim(IPA.Ales)[1],round(splitPerc * dim(IPA.Ales)[1]))
train = IPA.Ales[trainIndices,]
test = IPA.Ales[-trainIndices,]
for(i in 1:numks) {
classifications = knn(train[,c('IBU.New','ABV.New')],test[,c('IBU.New','ABV.New')],as.factor(train$type), prob = TRUE, k = i)
table(as.factor(test$type),classifications)
CM = confusionMatrix(table(as.factor(test$type),classifications))
masterAcc[j,i] = CM$overall[1]
}
}
MeanAcc = colMeans(masterAcc)
plot(seq(1,numks,1),MeanAcc, type = "l")
k <- which.max(MeanAcc)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
# Budweiser would also like to investigate the difference with respect to IBU and ABV between IPAs (India Pale Ales) and other types of Ale (any beer with “Ale” in its name other than IPA).  You decide to use KNN classification to investigate this relationship.  Provide statistical evidence one way or the other. You can of course assume your audience is comfortable with percentages … KNN is very easy to understand conceptually.
## In addition, while you have decided to use KNN to investigate this relationship (KNN is required) you may also feel free to supplement your response to this question with any other methods or techniques you have learned.  Creativity and alternative solutions are always encouraged.
## The text of case study question 8 has been edited slightly (the deliverables are still the same) in an updated version of the document on github  (from knn - clustering to classification): the goal is to classify between IPA and just Ale using IBU and ABV attributes.
library(class)
library(caret)
library(tidyverse)
library(VIM)
library(lattice)
library(mice)
breweries <- read.csv("https://raw.githubusercontent.com/BivinSadler/MDS-6306-Doing-Data-Science-Fall-2019/master/Unit%208%20and%209%20Case%20Study%201/Breweries.csv", header = TRUE, strip.white=TRUE)
#breweries
beers <- read.csv("https://raw.githubusercontent.com/BivinSadler/MDS-6306-Doing-Data-Science-Fall-2019/master/Unit%208%20and%209%20Case%20Study%201/Beers.csv", header = TRUE)
#beers
beers <-  beers %>% dplyr::rename( Brew_ID = Brewery_id)
#beers
breweries <- breweries %>% dplyr::rename(Name_Brew = Name)
#breweries
beers <- beers %>% dplyr::rename(Name_Beer = Name)
brew.beer <- full_join(breweries, beers, by = "Brew_ID")
#str(brew.beer)
#glimpse(brew.beer)
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(brew.beer,2,pMiss)
apply(brew.beer,1,pMiss)
aggr_plot <- aggr(brew.beer, col=c('navyblue','red'),
numbers=TRUE, sortVars=TRUE,
labels=names(brew.beer),
cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
#brew.beer %>% aggr(col=c('navyblue','red'),
#                  numbers=TRUE, sortVars=TRUE,
#                  labels=names(brew.beer),
#                  cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
#marginplot(brew.beer[,c("ABV","IBU")])
md.pattern(brew.beer)
brew.beer.impute <- mice(brew.beer[,c("Beer_ID","ABV","IBU")],m=5,maxit=50,meth='pmm',seed=100)
#summary(brew.beer.impute)
brew.beer.impute$imp$ABV #check the imputed data ABV
brew.beer.impute$imp$IBU # check the imputed data IBU
brew.beer.draft <- complete(brew.beer.impute,1)  # Complete impute dataset
#view(brew.beer.draft)
brew.beer.draft <- brew.beer.draft %>% dplyr::rename(ABV.New = ABV)
brew.beer.draft <- brew.beer.draft %>% dplyr::rename(IBU.New = IBU)
brew.beer.New <- full_join(brew.beer, brew.beer.draft, by = "Beer_ID")
#view(brew.beer.New)
#styles <- unique(brew.beer.New$Style)
#view(styles)
Ales.beer <- cbind(brew.beer.New, type='Ales', stringsAsFactors=F) %>% filter(grepl('\\bale\\b', Style, ignore.case=T))
IPA.beer <- cbind(brew.beer.New, type='IPA', stringsAsFactors=F) %>% filter(grepl('\\bIPA\\b', Style, ignore.case=T))
IPA.Ales <- union(Ales.beer, IPA.beer)
IPA.Ales$type <- as.factor(IPA.Ales$type)
set.seed(100)
splitPerc = .7
iterations = 500
numks =100
masterAcc = matrix(nrow = iterations, ncol = numks)
for(j in 1:iterations) {
accs = data.frame(accuracy = numeric(numks), k = numeric(numks))
trainIndices = sample(1:dim(IPA.Ales)[1],round(splitPerc * dim(IPA.Ales)[1]))
train = IPA.Ales[trainIndices,]
test = IPA.Ales[-trainIndices,]
for(i in 1:numks) {
classifications = knn(train[,c('IBU.New','ABV.New')],test[,c('IBU.New','ABV.New')],as.factor(train$type), prob = TRUE, k = i)
table(as.factor(test$type),classifications)
CM = confusionMatrix(table(as.factor(test$type),classifications))
masterAcc[j,i] = CM$overall[1]
}
}
set.seed(100)
splitPerc = .7
iterations = 50
numks =100
masterAcc = matrix(nrow = iterations, ncol = numks)
for(j in 1:iterations) {
accs = data.frame(accuracy = numeric(numks), k = numeric(numks))
trainIndices = sample(1:dim(IPA.Ales)[1],round(splitPerc * dim(IPA.Ales)[1]))
train = IPA.Ales[trainIndices,]
test = IPA.Ales[-trainIndices,]
for(i in 1:numks) {
classifications = knn(train[,c('IBU.New','ABV.New')],test[,c('IBU.New','ABV.New')],as.factor(train$type), prob = TRUE, k = i)
table(as.factor(test$type),classifications)
CM = confusionMatrix(table(as.factor(test$type),classifications))
masterAcc[j,i] = CM$overall[1]
}
}
set.seed(5)
splitPerc = .7
iterations = 50
numks =100
masterAcc = matrix(nrow = iterations, ncol = numks)
for(j in 1:iterations) {
accs = data.frame(accuracy = numeric(numks), k = numeric(numks))
trainIndices = sample(1:dim(IPA.Ales)[1],round(splitPerc * dim(IPA.Ales)[1]))
train = IPA.Ales[trainIndices,]
test = IPA.Ales[-trainIndices,]
for(i in 1:numks) {
classifications = knn(train[,c('IBU.New','ABV.New')],test[,c('IBU.New','ABV.New')],as.factor(train$type), prob = TRUE, k = i)
table(as.factor(test$type),classifications)
CM = confusionMatrix(table(as.factor(test$type),classifications))
masterAcc[j,i] = CM$overall[1]
}
}
set.seed(5)
splitPerc = .7
iterations = 50
numks =100
masterAcc = matrix(nrow = iterations, ncol = numks)
for(j in 1:iterations) {
accs = data.frame(accuracy = numeric(numks), k = numeric(numks))
trainIndices = sample(1:dim(IPA.Ales)[1],round(splitPerc * dim(IPA.Ales)[1]))
train = IPA.Ales[trainIndices,]
test = IPA.Ales[-trainIndices,]
for(i in 1:numks) {
classifications = knn(train[,c('IBU.New','ABV.New')],test[,c('IBU.New','ABV.New')],as.factor(train$type), prob = TRUE, k = i)
table(as.factor(test$type),classifications)
CM = confusionMatrix(table(as.factor(test$type),classifications))
masterAcc[j,i] = CM$overall[1]
}
}
MeanAcc = colMeans(masterAcc)
plot(seq(1,numks,1),MeanAcc, type = "l")
k <- which.max(MeanAcc)
set.seed(5)
splitPerc = .7
iterations = 50
numks =100
masterAcc = matrix(nrow = iterations, ncol = numks)
for(j in 1:iterations) {
accs = data.frame(accuracy = numeric(numks), k = numeric(numks))
trainIndices = sample(1:dim(IPA.Ales)[1],round(splitPerc * dim(IPA.Ales)[1]))
train = IPA.Ales[trainIndices,]
test = IPA.Ales[-trainIndices,]
for(i in 1:numks) {
classifications = knn(train[,c('IBU.New','ABV.New')],test[,c('IBU.New','ABV.New')],as.factor(train$type), prob = TRUE, k = i)
table(as.factor(test$type),classifications)
CM = confusionMatrix(table(as.factor(test$type),classifications))
masterAcc[j,i] = CM$overall[1]
}
}
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(class)
library(caret)
library(tidyverse)
library(VIM)
library(lattice)
library(mice)
breweries <- read.csv("https://raw.githubusercontent.com/BivinSadler/MDS-6306-Doing-Data-Science-Fall-2019/master/Unit%208%20and%209%20Case%20Study%201/Breweries.csv", header = TRUE, strip.white=TRUE)
#breweries
beers <- read.csv("https://raw.githubusercontent.com/BivinSadler/MDS-6306-Doing-Data-Science-Fall-2019/master/Unit%208%20and%209%20Case%20Study%201/Beers.csv", header = TRUE)
#beers
beers <-  beers %>% dplyr::rename( Brew_ID = Brewery_id)
#beers
breweries <- breweries %>% dplyr::rename(Name_Brew = Name)
#breweries
beers <- beers %>% dplyr::rename(Name_Beer = Name)
brew.beer <- full_join(breweries, beers, by = "Brew_ID")
#str(brew.beer)
#glimpse(brew.beer)
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(brew.beer,2,pMiss)
apply(brew.beer,1,pMiss)
invisible(pMiss <- function(x){sum(is.na(x))/length(x)*100})
invisible(apply(brew.beer,2,pMiss))
invisible(apply(brew.beer,1,pMiss))
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(class)
library(caret)
library(tidyverse)
library(VIM)
library(lattice)
library(mice)
breweries <- read.csv("https://raw.githubusercontent.com/BivinSadler/MDS-6306-Doing-Data-Science-Fall-2019/master/Unit%208%20and%209%20Case%20Study%201/Breweries.csv", header = TRUE, strip.white=TRUE)
#breweries
beers <- read.csv("https://raw.githubusercontent.com/BivinSadler/MDS-6306-Doing-Data-Science-Fall-2019/master/Unit%208%20and%209%20Case%20Study%201/Beers.csv", header = TRUE)
#beers
beers <-  beers %>% dplyr::rename( Brew_ID = Brewery_id)
#beers
breweries <- breweries %>% dplyr::rename(Name_Brew = Name)
#breweries
beers <- beers %>% dplyr::rename(Name_Beer = Name)
brew.beer <- full_join(breweries, beers, by = "Brew_ID")
#str(brew.beer)
#glimpse(brew.beer)
invisible(pMiss <- function(x){sum(is.na(x))/length(x)*100})
invisible(apply(brew.beer,2,pMiss))
invisible(apply(brew.beer,1,pMiss))
aggr_plot <- aggr(brew.beer, col=c('navyblue','red'),
numbers=TRUE, sortVars=TRUE,
labels=names(brew.beer),
cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
#brew.beer %>% aggr(col=c('navyblue','red'),
#                  numbers=TRUE, sortVars=TRUE,
#                  labels=names(brew.beer),
#                  cex.axis=.7, gap=3, ylab=c("Histogram of Missing Data","Pattern"))
#marginplot(brew.beer[,c("ABV","IBU")])
md.pattern(brew.beer)
brew.beer.impute <- mice(brew.beer[,c("Beer_ID","ABV","IBU")],m=5,maxit=50,meth='pmm',seed=100)
#summary(brew.beer.impute)
brew.beer.impute$imp$ABV #check the imputed data ABV
brew.beer.impute$imp$IBU # check the imputed data IBU
brew.beer.draft <- complete(brew.beer.impute,1)  # Complete impute dataset
#view(brew.beer.draft)
brew.beer.draft <- brew.beer.draft %>% dplyr::rename(ABV.New = ABV)
brew.beer.draft <- brew.beer.draft %>% dplyr::rename(IBU.New = IBU)
brew.beer.New <- full_join(brew.beer, brew.beer.draft, by = "Beer_ID")
#view(brew.beer.New)
#styles <- unique(brew.beer.New$Style)
#view(styles)
Ales.beer <- cbind(brew.beer.New, type='Ales', stringsAsFactors=F) %>% filter(grepl('\\bale\\b', Style, ignore.case=T))
IPA.beer <- cbind(brew.beer.New, type='IPA', stringsAsFactors=F) %>% filter(grepl('\\bIPA\\b', Style, ignore.case=T))
IPA.Ales <- union(Ales.beer, IPA.beer)
IPA.Ales$type <- as.factor(IPA.Ales$type)
set.seed(5)
splitPerc = .7
iterations = 50
numks = 100
masterAcc = matrix(nrow = iterations, ncol = numks)
for(j in 1:iterations) {
accs = data.frame(accuracy = numeric(numks), k = numeric(numks))
trainIndices = sample(1:dim(IPA.Ales)[1],round(splitPerc * dim(IPA.Ales)[1]))
train = IPA.Ales[trainIndices,]
test = IPA.Ales[-trainIndices,]
for(i in 1:numks) {
classifications = knn(train[,c('IBU.New','ABV.New')],test[,c('IBU.New','ABV.New')],as.factor(train$type), prob = TRUE, k = i)
table(as.factor(test$type),classifications)
CM = confusionMatrix(table(as.factor(test$type),classifications))
masterAcc[j,i] = CM$overall[1]
}
}
MeanAcc = colMeans(masterAcc)
plot(seq(1,numks,1),MeanAcc, type = "l")
k <- which.max(MeanAcc)
classifications = knn(train[,c('IBU.New','ABV.New')],test[,c('IBU.New','ABV.New')],train$type, prob = TRUE, k)
table(test$type,classifications)
confusionMatrix(table(test$type,classifications))
k
classifications = knn(train[,c('IBU.New','ABV.New')],test[,c('IBU.New','ABV.New')],train$type, prob = TRUE, k)
table(test$type,classifications)
confusionMatrix(table(test$type,classifications))
set.seed(5)
splitPerc = .7
iterations = 500
numks = 100
masterAcc = matrix(nrow = iterations, ncol = numks)
for(j in 1:iterations) {
accs = data.frame(accuracy = numeric(numks), k = numeric(numks))
trainIndices = sample(1:dim(IPA.Ales)[1],round(splitPerc * dim(IPA.Ales)[1]))
train = IPA.Ales[trainIndices,]
test = IPA.Ales[-trainIndices,]
for(i in 1:numks) {
classifications = knn(train[,c('IBU.New','ABV.New')],test[,c('IBU.New','ABV.New')],as.factor(train$type), prob = TRUE, k = i)
table(as.factor(test$type),classifications)
CM = confusionMatrix(table(as.factor(test$type),classifications))
masterAcc[j,i] = CM$overall[1]
}
}
MeanAcc = colMeans(masterAcc)
plot(seq(1,numks,1),MeanAcc, type = "l")
k <- which.max(MeanAcc)
set.seed(5)
splitPerc = .7
iterations = 250
numks = 100
masterAcc = matrix(nrow = iterations, ncol = numks)
for(j in 1:iterations) {
accs = data.frame(accuracy = numeric(numks), k = numeric(numks))
trainIndices = sample(1:dim(IPA.Ales)[1],round(splitPerc * dim(IPA.Ales)[1]))
train = IPA.Ales[trainIndices,]
test = IPA.Ales[-trainIndices,]
for(i in 1:numks) {
classifications = knn(train[,c('IBU.New','ABV.New')],test[,c('IBU.New','ABV.New')],as.factor(train$type), prob = TRUE, k = i)
table(as.factor(test$type),classifications)
CM = confusionMatrix(table(as.factor(test$type),classifications))
masterAcc[j,i] = CM$overall[1]
}
}
